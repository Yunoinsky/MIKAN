diff --git a/source/device/hid/hid.c b/source/device/hid/hid.c
index 1370af3..5b11d01 100644
--- a/source/device/hid/hid.c
+++ b/source/device/hid/hid.c
@@ -915,6 +915,11 @@ Result HidAttach(struct UsbDevice *device, u32 interfaceNumber) {
 	reportDescriptor = NULL;
 
 	data->ParserResult->Interface = interfaceNumber;
+	if (data->ParserResult->Application.Page == GenericDesktopControl) {
+            LOGF("HID: type = %d\n", (u16)data->ParserResult->Application.Desktop);
+        } else {
+            LOGF("HID: page = %d\n", data->ParserResult->Application.Page);
+        }
 	if (data->ParserResult->Application.Page == GenericDesktopControl &&
 		(u16)data->ParserResult->Application.Desktop < HidUsageAttachCount &&
 		HidUsageAttach[(u16)data->ParserResult->Application.Desktop] != NULL) {
@@ -930,4 +935,4 @@ deallocate:
 
 s32 HidGetFieldValue(struct HidParserField *field, u32 index) {
 	return BitGetSigned(field->Value.Pointer, index * field->Size, field->Size);
-}
\ No newline at end of file
+}
diff --git a/source/hcd/dwc/designware20.c b/source/hcd/dwc/designware20.c
index a8e4c8b..62dd4e4 100644
--- a/source/hcd/dwc/designware20.c
+++ b/source/hcd/dwc/designware20.c
@@ -500,7 +500,10 @@ Result HcdSumbitControlMessage(struct UsbDevice *device,
 	struct UsbPipeAddress pipe, void* buffer, u32 bufferLength,
 	struct UsbDeviceRequest *request) {
 	Result result;
-	struct UsbPipeAddress tempPipe;
+	static volatile struct UsbDeviceRequest qwqreq __attribute__((section(".bss.dmem")));
+	static volatile struct UsbPipeAddress tempPipe __attribute__((section(".bss.dmem")));
+	qwqreq = *request;
+	request = (struct UsbDeviceRequest *)&qwqreq;
 	if (pipe.Device == RootHubDeviceNumber) {
 		return HcdProcessRootHubMessage(device, pipe, buffer, bufferLength, request);
 	}
@@ -516,7 +519,7 @@ Result HcdSumbitControlMessage(struct UsbDevice *device,
 	tempPipe.Type = Control;
 	tempPipe.Direction = Out;
 	
-	if ((result = HcdChannelSendWait(device, &tempPipe, 0, request, 8, request, Setup)) != OK) {		
+	if ((result = HcdChannelSendWait(device, (struct UsbPipeAddress *)&tempPipe, 0, request, 8, request, Setup)) != OK) {		
 		LOGF("HCD: Could not send SETUP to %s.\n", UsbGetDescription(device));
 		return OK;
 	}
@@ -533,7 +536,7 @@ Result HcdSumbitControlMessage(struct UsbDevice *device,
 		tempPipe.Type = Control;
 		tempPipe.Direction = pipe.Direction;
 		
-		if ((result = HcdChannelSendWait(device, &tempPipe, 0, databuffer, bufferLength, request, Data1)) != OK) {		
+		if ((result = HcdChannelSendWait(device, (struct UsbPipeAddress *)&tempPipe, 0, databuffer, bufferLength, request, Data1)) != OK) {		
 			LOGF("HCD: Could not send DATA to %s.\n", UsbGetDescription(device));
 			return OK;
 		}
@@ -566,7 +569,7 @@ Result HcdSumbitControlMessage(struct UsbDevice *device,
 	tempPipe.Type = Control;
 	tempPipe.Direction = ((bufferLength == 0) || pipe.Direction == Out) ? In : Out;
 	
-	if ((result = HcdChannelSendWait(device, &tempPipe, 0, databuffer, 0, request, Data1)) != OK) {		
+	if ((result = HcdChannelSendWait(device, (struct UsbPipeAddress *)&tempPipe, 0, databuffer, 0, request, Data1)) != OK) {		
 		LOGF("HCD: Could not send STATUS to %s.\n", UsbGetDescription(device));
 		return OK;
 	}
diff --git a/source/platform/platform.c b/source/platform/platform.c
index 4d46c66..8adc970 100644
--- a/source/platform/platform.c
+++ b/source/platform/platform.c
@@ -29,8 +29,8 @@ struct HeapAllocation {
 	struct HeapAllocation *Next;
 };
 
-u8 Heap[0x4000] __attribute__((aligned(8))); // Support a maximum of 16KiB of allocations
-struct HeapAllocation Allocations[0x100]; // Support 256 allocations
+u8 Heap[0x40000] __attribute__((aligned(8), section(".bss.dmem"))); // Support a maximum of 16KiB of allocations
+struct HeapAllocation Allocations[0x1000]; // Support 4096 allocations
 struct HeapAllocation *FirstAllocation = HEAP_END, *FirstFreeAllocation = NULL;
 u32 allocated = 0;
 
@@ -73,7 +73,7 @@ void* MemoryAllocate(u32 size) {
 				Next->Next = Current->Next;
 				Current->Next = Next;
 				allocated += size;
-				LOG_DEBUGF("Platform: malloc(%#x) = %#x. (%d/%d)\n", size, Next->Address, allocated, sizeof(Heap));
+				//LOG_DEBUGF("Platform: malloc(%#x) = %#x. (%d/%d)\n", size, Next->Address, allocated, sizeof(Heap));
 				return Next->Address;
 			}
 			else
@@ -93,7 +93,7 @@ void* MemoryAllocate(u32 size) {
 				Next->Next = Current->Next;
 				Current->Next = Next;
 				allocated += size;
-				LOG_DEBUGF("Platform: malloc(%#x) = %#x. (%d/%d)\n", size, Next->Address, allocated, sizeof(Heap));
+				//LOG_DEBUGF("Platform: malloc(%#x) = %#x. (%d/%d)\n", size, Next->Address, allocated, sizeof(Heap));
 				return Next->Address;
 			}
 			else {
@@ -448,4 +448,4 @@ void PlatformLoad()
 	FirstAllocation = HEAP_END;
 	FirstFreeAllocation = NULL;
 #endif
-}
\ No newline at end of file
+}
diff --git a/source/usbd/usbd.c b/source/usbd/usbd.c
index c0c1ebd..c5a1fc6 100644
--- a/source/usbd/usbd.c
+++ b/source/usbd/usbd.c
@@ -644,4 +644,4 @@ void csudUsbCheckForChange() {
 	if (Devices[0] != NULL &&
 		Devices[0]->DeviceCheckForChange != NULL)
 		Devices[0]->DeviceCheckForChange(Devices[0]);
-}
\ No newline at end of file
+}
